"""Model o'zgarishlari

Revision ID: 8bb146f203e3
Revises: b47903b7fcf7
Create Date: 2025-05-07 22:22:12.208631

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8bb146f203e3"
down_revision: Union[str, None] = "b47903b7fcf7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_branch",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("branch_id", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["branch_id"],
            ["branch.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_branch_id"), "user_branch", ["id"], unique=False
    )
    op.create_table(
        "user_role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_role_id"), "user_role", ["id"], unique=False)
    op.create_table(
        "working_day",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=True),
        sa.Column("day_of_week", sa.String(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["group.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_working_day_id"), "working_day", ["id"], unique=False
    )
    op.drop_index("ix_user_branchs_id", table_name="user_branchs")
    op.drop_table("user_branchs")
    op.drop_index("ix_user_roles_id", table_name="user_roles")
    op.drop_table("user_roles")
    op.drop_index("ix_working_days_id", table_name="working_days")
    op.drop_table("working_days")
    op.add_column(
        "activity",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "activity",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "attendances",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "attendances",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "branch",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "branch",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "group", sa.Column("activity_id", sa.Integer(), nullable=True)
    )
    op.add_column("group", sa.Column("branch_id", sa.Integer(), nullable=True))
    op.add_column(
        "group",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "group",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.drop_constraint("group_branch_fkey", "group", type_="foreignkey")
    op.drop_constraint("group_activity_fkey", "group", type_="foreignkey")
    op.create_foreign_key(None, "group", "branch", ["branch_id"], ["id"])
    op.create_foreign_key(None, "group", "activity", ["activity_id"], ["id"])
    op.drop_column("group", "activity")
    op.drop_column("group", "branch")
    op.add_column(
        "role",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "role",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "user",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "user",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "user_descriptions",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "user_descriptions",
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("user_descriptions", "updated_at")
    op.drop_column("user_descriptions", "created_at")
    op.drop_column("user", "updated_at")
    op.drop_column("user", "created_at")
    op.drop_column("role", "updated_at")
    op.drop_column("role", "created_at")
    op.add_column(
        "group",
        sa.Column("branch", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "group",
        sa.Column(
            "activity", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "group", type_="foreignkey")
    op.drop_constraint(None, "group", type_="foreignkey")
    op.create_foreign_key(
        "group_activity_fkey", "group", "activity", ["activity"], ["id"]
    )
    op.create_foreign_key(
        "group_branch_fkey", "group", "branch", ["branch"], ["id"]
    )
    op.drop_column("group", "updated_at")
    op.drop_column("group", "created_at")
    op.drop_column("group", "branch_id")
    op.drop_column("group", "activity_id")
    op.drop_column("branch", "updated_at")
    op.drop_column("branch", "created_at")
    op.drop_column("attendances", "updated_at")
    op.drop_column("attendances", "created_at")
    op.drop_column("activity", "updated_at")
    op.drop_column("activity", "created_at")
    op.create_table(
        "working_days",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "group_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "day_of_week", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column("start_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "is_active", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["group_id"], ["group.id"], name="working_days_group_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="working_days_pkey"),
    )
    op.create_index("ix_working_days_id", "working_days", ["id"], unique=False)
    op.create_table(
        "user_roles",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("role", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["role"], ["role.id"], name="user_roles_role_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user"], ["user.id"], name="user_roles_user_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="user_roles_pkey"),
    )
    op.create_index("ix_user_roles_id", "user_roles", ["id"], unique=False)
    op.create_table(
        "user_branchs",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("branch", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "is_active", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["branch"], ["branch.id"], name="user_branchs_branch_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user"], ["user.id"], name="user_branchs_user_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="user_branchs_pkey"),
    )
    op.create_index("ix_user_branchs_id", "user_branchs", ["id"], unique=False)
    op.drop_index(op.f("ix_working_day_id"), table_name="working_day")
    op.drop_table("working_day")
    op.drop_index(op.f("ix_user_role_id"), table_name="user_role")
    op.drop_table("user_role")
    op.drop_index(op.f("ix_user_branch_id"), table_name="user_branch")
    op.drop_table("user_branch")
    # ### end Alembic commands ###
